def apply_nms(self, boxes, scores, classes, iou_threshold=0.5):
    """Apply NMS to remove overlapping detections"""
    import cv2
    
    if len(boxes) == 0:
        return [], [], []
    
    # Convert to format expected by cv2.dnn.NMSBoxes
    boxes_xywh = []
    for box in boxes:
        x1, y1, x2, y2 = box
        w = x2 - x1
        h = y2 - y1
        boxes_xywh.append([x1, y1, w, h])
    
    # Apply NMS
    indices = cv2.dnn.NMSBoxes(boxes_xywh, scores, 0.0, iou_threshold)
    
    if len(indices) > 0:
        indices = indices.flatten()
        return [boxes[i] for i in indices], [scores[i] for i in indices], [classes[i] for i in indices]
    else:
        return [], [], []


# After getting ONNX results, before creating Items:
if len(boxes) > 0:
    boxes, scores, classes = self.apply_nms(boxes, scores, classes, iou_threshold=0.5)
